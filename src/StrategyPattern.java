public class StrategyPattern {
    /*
    StrategyPattern

        [개념]
            - 여러 알고리즘을 하나의 추상적인 접근점을 만들어 접근점에서 서로 교환 가능하도록 하는 패턴
              or
            - 알고리즘군을 정의하고 각각을 캡슐화하여 교환해서 사용할 수 있도록 만든다, 스트래티지를 활용하면 알고리즘을 사용하는 클라이언트와는 독립적으로 알고리즘 변경이 가능하다.
              or
            - 행위를 클래스로 캡슐화해 동적으로 행위를 자유롭게 바꿀 수 있게 해주는 패턴
              or
            - 특정한 기능을 수행하는데에 있어 다양한 알고리즘이 적용될 수 있는 경우, 이 다양한 알고리즘을 별도록 분리하는 설계 방법

            위의 개념들이 목표하는 바는(Goal)
            = 즉, 전략을 쉽게 바꿀 수 있도록 해주는 디자인 패턴

            전략이란?
                - 어떤 목적을 달성하기 위해 일을 수행하는 방식, 비즈니스 규칙, 문제를 해결하는 알고리즘 등


     */
}
